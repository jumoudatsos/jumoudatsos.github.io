//GRID

$colunas: 12;
$gutter: 20px;

$l-device: 1200px;
$m-device: 760px;
$s-device: 480px;

// BOX-SING

* {
  box-sizing: border-box;
}

*::after {
  box-sizing: border-box;
}

*::before {
  box-sizing: border-box;
}

// MIXIN - MEDIA QUERIES

@mixin device($size) {
  @if $size==l {
    // large
    @media screen and (min-width:#{$l-device}) {
      @content;
    }
  } @else if $size==m {
    @media screen and (min-width:#{$m-device}) and (max-width:1199px) {
      @content;
    }
  } @else if $size==s {
    @media screen and (max-width: 759px) {
      @content;
    }
  }
}

//função grid

@function grid($col, $offset: false) {
  $width: $col/$colunas * 100%;
  $result: calc(#{$width} - #{$gutter});

  @if $offset == offset {
    $gutter: $gutter/2;
    $result: calc(#{$width} + #{$gutter});
  }

  @return $result;
}

@for $i from 1 to 13 {
  .grid-#{$i} {
    width: grid($i);
  }
}

@mixin grid-st {
  float: left;
  min-height: 1px;
  margin-left: $gutter/2;
  margin-right: $gutter/2;

  @include device(s) {
    width: 100%;
    float: none;
    margin-left: 0px;
    margin-right: 0px;
  }
}

[class^="grid-"] {
  @include grid-st;
}
//offset

@for $i from 1 to 13 {
  .offset-#{$i} {
    margin-left: grid($i, offset);
    @extend %offset;
  }
}

@include device(s) {
  %offset {
    margin-left: 0px;
  }
}

//clear fix

@mixin clearfix {
  &::after,
  &::before {
    content: " ";
    display: table;
    clear: both;
  }
}

@mixin container {
  max-width: $l-device;
  margin: 0 auto;
  position: relative;

  @include device(m) {
    max-width: $m-device;
  }

  @include device(s) {
    width: $s-device;
    padding-left: 10px;
    padding-right: 10px;
  }

  @include clearfix;
}

// row

@mixin row {
  position: relative;
  margin-left: -10px;
  margin-right: -10px;
  @include device(s) {
    margin-left: 0px;
    margin-right: 0px;
  }

  @include clearfix;
}

.container {
  @include container;
}

.row {
  @include row;
}
